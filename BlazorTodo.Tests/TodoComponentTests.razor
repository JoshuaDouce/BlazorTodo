@inherits TestComponentBase
@*
    This is a special Blazor component, which contains razor tests.

    These tests are written in a mix of C# and Razor syntax.

    The first test is a snapshot test, that will automatically perform a semantic
    comparison of the rendered output of TestInput with that of ExpectedOutput.

    The second is a Fixture test, where you can declare the component under test
    and additional fragments that can be used in the "act" and "assertion" phases
    of the test, which runs in the related test method(s).

    Learn more at https://bunit.egilhansen.com/docs/
*@

<SnapshotTest Description="Initial view has no items to do">
    <TestInput>
        <Todo></Todo>
    </TestInput>
    <ExpectedOutput>
        <h3>Todo (0)</h3>
        <ul></ul>
        <input placeholder="Something todo">
        <button>Add todo</button>
    </ExpectedOutput>
</SnapshotTest>

<Fixture Description="Adding todo increments count and adds to list" Test="AddTodo">
    <ComponentUnderTest>
        <Todo></Todo>
    </ComponentUnderTest>
    <Fragment>
        <h3>Todo (1)</h3>
        <ul>
            <li>
                <input type="checkbox" />
                <input value="New to do" />
            </li>
        </ul>
        <input placeholder="Something todo" value="">
        <button>Add todo</button>
    </Fragment>
</Fixture>

@code
{
    public void AddTodo(Fixture fixture)
    {
        // Arrange
        var cut = fixture.GetComponentUnderTest<Todo>();
        cut.Find("input").Change("New to do");

        //Act
        cut.Find("button").Click();

        // Assert
        var expected = fixture.GetFragment();
        cut.MarkupMatches(expected);
    }
}
